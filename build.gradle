plugins {
    id "java-library"
    id "maven-publish"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

//dependencies {
//    project(":generator")
//    project(":intermediate")
//}

sourceSets {
    main {
        java {
            srcDirs([
                    "intermediate/src/main/java",
                    "intermediate/src/special/java",
                    "intermediate/src/supporting/java"
            ])
        }
    }
}

task GenerateEnums(type: JavaExec, group: "codegen", dependsOn: [':generator:assemble']) {
    doLast {
        println("GenerateEnums Done")
    }
    classpath "${project(":generator").buildDir}/classes/java/main/" +     \
                  ":${project(":generator").buildDir}/resources/main/"
    main "edu.nps.moves.dis7.source.generator.enumerations.GenerateEnumerations"
    args([
            "generator/xml/SISO/SISO-REF-010.xml",
            "${projectDir}/intermediate/src/main/java/edu/nps/moves/dis7/enumerations",
            "edu.nps.moves.dis7.enumerations",
    ])
}

task GeneratePdus(type: JavaExec, group: "codegen", dependsOn: "GenerateEnums") {
    doLast {
        println("GeneratePdus Done")
    }
    classpath "${project(":generator").buildDir}/classes/java/main/" +     \
                  ":${project(":generator").buildDir}/resources/main/"
    jvmArgs = ([
            "-Dxmlpg.generatedSourceDir=intermediate/src/main/java",
            "-Dxmlpg.package=edu.nps.moves.dis7"
    ])
    main "edu.nps.moves.dis7.source.generator.pdus.GeneratePdus"
    args(["generator/xml/dis_7_2012/DIS_7_2012.xml", "java"])
}

task GenerateJammers(type: JavaExec, group: "codegen", dependsOn: "GeneratePdus") {
    doLast {
        println("GenerateJammers Done")
    }
    classpath "${project(":generator").buildDir}/classes/java/main/" +     \
                  ":${project(":generator").buildDir}/resources/main/"
    main "edu.nps.moves.dis7.source.generator.entitytypes.GenerateJammers"
    args([
            "generator/xml/SISO/SISO-REF-010.xml",
            "intermediate/src/main/java/edu/nps/moves/dis7/jammers",
            "edu.nps.moves.dis7.jammers"
    ])
}

task GenerateObjectTypes(type: JavaExec, group: "codegen", dependsOn: "GenerateJammers") {
    doLast {
        println("GenerateObjectTypes Done")
    }
    classpath "${project(":generator").buildDir}/classes/java/main/" +     \
                  ":${project(":generator").buildDir}/resources/main/"
    main "edu.nps.moves.dis7.source.generator.entitytypes.GenerateObjectTypes"
    args([
            "generator/xml/SISO/SISO-REF-010.xml",
            "intermediate/src/main/java/edu/nps/moves/dis7/objecttypes",
            "edu.nps.moves.dis7.objecttypes"
    ])
}

task GenerateEntityTypes(type: JavaExec, group: "codegen", dependsOn: ["GenerateObjectTypes",":intermediate:classes"]) {
    doLast {
        println("GenerateEntityTypes Done")
    }
    classpath "${project(":generator").buildDir}/classes/java/main/" +     \
                  ":${project(":generator").buildDir}/resources/main/" +     \
                  ":${project(":intermediate").buildDir}/classes/java/main"
    main "edu.nps.moves.dis7.source.generator.entitytypes.GenerateEntityTypes"
    args([
            "generator/xml/SISO/SISO-REF-010.xml",
            "intermediate/src/main/java/edu/nps/moves/dis7/entities",
            "edu.nps.moves.dis7.entities"
    ])
}

task GenerateDIS(group: "codegen", dependsOn: ["GenerateEntityTypes"])


assemble.dependsOn("GenerateDIS")

clean.dependsOn([":intermediate:clean", ":generator:clean"])

task cleanAll(group: "Build", dependsOn: [":intermediate:cleanGenerated", "clean"])
